name: .NET

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      docker_images:
        description: "Create docker images"
        required: false
        default: "true"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 9.0.x

      - name: Register additional NuGet Repositories
        run: |
          dotnet nuget add source --name ZERA https://nuget.pkg.github.com/ZeraGmbH/index.json -u Action -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

      - name: Build Windows
        run: |
          dotnet publish WebServer/Server -r win-x64 --self-contained false --configuration Release

      - name: Build Linux
        run: |
          dotnet publish WebServer/Server -r linux-x64 --self-contained false --configuration Release

      - name: Run Unit-Tests
        run: |
          dotnet test

      - name: Start Service for Acceptance Tests
        run: |
          cd WebServer/Server/bin/Release/net9.0/linux-x64/publish
          ./WebSamDeviceApis&
          echo "SOURCE_MOCK_PID=$!" >> $GITHUB_ENV

      - name: Exit Service
        run: |
          kill -9 $SOURCE_MOCK_PID

      - name: Upload Build Artifacts Windows
        uses: actions/upload-artifact@v3
        with:
          name: build-win-x64
          path: "WebServer/Server/bin/Release/net9.0/win-x64/publish/"
          if-no-files-found: error
          retention-days: 1

      - name: Upload Build Artifacts Linux
        uses: actions/upload-artifact@v3
        with:
          name: build-linux-x64
          path: "WebServer/Server/bin/Release/net9.0/linux-x64/publish/"
          if-no-files-found: error
          retention-days: 1

      - name: Docker build
        if: github.event.inputs.docker_images == 'true'
        run: |
          docker build . -f WebServer/Server/Dockerfile -t=device-api
          docker save -o device-api.tar device-api

      - name: Upload Docker Artifacts
        if: github.event.inputs.docker_images == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: device-api
          path: device-api.tar

  dependabot-automerge:
    runs-on: ubuntu-latest
    needs: [build]
    permissions: write-all
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
